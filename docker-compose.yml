version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # Porta AMQP
      - "15672:15672"  # Porta do Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=MensageriaSenff
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data  # PersistÃªncia de dados
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d MensageriaSenff"]
      interval: 5s
      timeout: 5s
      retries: 5

  myapp:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__PostgreSQL=Host=postgres;Port=5432;Database=MensageriaSenff;Username=admin;Password=123
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

volumes:
  pgdata:  # Volume para persistir dados do PostgreSQL